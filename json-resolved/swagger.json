{
  "swagger" : "2.0",
  "info" : {
    "description" : "This is a joke API",
    "version" : "1.0.0",
    "title" : "Joke API",
    "contact" : {
      "email" : "nino.jeanrobert@gmail.com"
    },
    "license" : {
      "name" : "Apache 2.0",
      "url" : "http://www.apache.org/licenses/LICENSE-2.0.html"
    }
  },
  "host" : "jeannode.eu-4.evennode.com:3000",
  "basePath" : "/jeanrobert/jokes_api/1.0.0",
  "tags" : [ {
    "name" : "admins",
    "description" : "Secured Admin-only calls"
  }, {
    "name" : "developers",
    "description" : "Operations available to regular developers"
  } ],
  "schemes" : [ "https" ],
  "consumes" : [ "application/json" ],
  "produces" : [ "application/json" ],
  "paths" : {
    "/joke" : {
      "get" : {
        "tags" : [ "developers" ],
        "summary" : "searches joke",
        "description" : "By passing in the appropriate options, you can search for\navailable joke in the system\n",
        "operationId" : "searchAllJoke",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "searchString",
          "in" : "query",
          "description" : "pass an optional search string for looking up jokes",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "skip",
          "in" : "query",
          "description" : "number of records to skip for pagination",
          "required" : false,
          "type" : "integer",
          "minimum" : 0,
          "format" : "int32"
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "maximum number of records to return",
          "required" : false,
          "type" : "integer",
          "maximum" : 50,
          "minimum" : 0,
          "format" : "int32"
        } ],
        "responses" : {
          "200" : {
            "description" : "search results matching criteria",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/Joke"
              }
            }
          },
          "400" : {
            "description" : "bad input parameter"
          }
        }
      },
      "post" : {
        "tags" : [ "admins" ],
        "summary" : "adds a joke item",
        "description" : "Adds a joke to the system",
        "operationId" : "addJoke",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "item",
          "description" : "Joke object to add",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/Joke"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "response"
          },
          "400" : {
            "description" : "invalid input, object invalid"
          },
          "409" : {
            "description" : "an existing item already exists"
          }
        }
      }
    }
  },
  "definitions" : {
    "Joke" : {
      "type" : "object",
      "required" : [ "id", "joke", "language", "name", "type" ],
      "properties" : {
        "id" : {
          "type" : "integer",
          "format" : "int32",
          "example" : 12345
        },
        "language" : {
          "type" : "string",
          "example" : "english"
        },
        "type" : {
          "type" : "string",
          "example" : "dogs"
        },
        "name" : {
          "type" : "string",
          "example" : "YIKES!"
        },
        "joke" : {
          "type" : "string",
          "example" : "How did the little Scottish dog feel when he saw a monster? Terrier-fied!"
        },
        "client_defined" : {
          "$ref" : "#/definitions/ClientDefinedObjectModel"
        }
      },
      "example" : {
        "name" : "YIKES!",
        "language" : "english",
        "id" : 12345,
        "type" : "dogs",
        "joke" : "How did the little Scottish dog feel when he saw a monster? Terrier-fied!",
        "client_defined" : { }
      }
    },
    "ClientDefinedObjectModel" : {
      "type" : "object"
    }
  }
}